---
import { getCollection } from "astro:content";
import ArrowCard from "./ArrowCard.astro";

const { collection, title } = Astro.props;

const data = (await getCollection(collection))
  .filter((item) => !item.data.draft)
  .sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());

const groupedData = data.reduce((acc, item) => {
  const year = item.data.date.getFullYear().toString();
  if (!acc[year]) acc[year] = [];
  acc[year].push(item);
  return acc;
}, {});

const years = Object.keys(groupedData).sort(
  (a, b) => parseInt(b) - parseInt(a),
);
---

<div class="space-y-10">
  <div class="animate font-semibold text-black dark:text-white">{title}</div>
  <div class="space-y-4">
    {
      years.map((year) => (
        <section class="animate space-y-4">
          <div class="font-semibold text-black dark:text-white">{year}</div>
          <ul class="flex flex-col gap-4">
            {groupedData[year].map((entry) => (
              <li class="animate">
                <ArrowCard entry={entry} />
              </li>
            ))}
          </ul>
        </section>
      ))
    }
  </div>
</div>
