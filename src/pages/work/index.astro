---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import Container from "../../components/Container.astro";
import { dateRange } from "../../lib/utils";
import { WORK } from "../../lib/consts";
import Link from "../../components/Link.astro";

const collection = (await getCollection("work")).sort(
  (a, b) =>
    new Date(b.data.dateStart).valueOf() - new Date(a.data.dateStart).valueOf(),
);

const work = await Promise.all(
  collection.map(async (item) => {
    const { Content } = await item.render();
    return { ...item, Content };
  }),
);
---

<Layout title={WORK.TITLE} description={WORK.DESCRIPTION}>
  <Container>
    <div class="space-y-10">
      <div class="animate font-semibold text-black dark:text-white">Work</div>
      <ul class="flex flex-col">
        {
          work.map((entry) => (
            <li class="animate">
              <div class="text-sm opacity-75">
                {dateRange(entry.data.dateStart, entry.data.dateEnd)}
              </div>
              <div class="font-semibold">
                {entry.data.link ? (
                  <Link
                    href={entry.data.link}
                    aria-label={`Link related to my work at ${entry.data.company}`}
                    external
                  >
                    {entry.data.company}
                  </Link>
                ) : (
                  <div>{entry.data.company}</div>
                )}
              </div>
              <div class="text-sm opacity-75">{entry.data.role}</div>
              <article class="animate">
                <entry.Content />
              </article>
            </li>
          ))
        }
      </ul>
    </div>
  </Container>
</Layout>
